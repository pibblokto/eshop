stages:
  - build
  - start
  - upload
  - deploy

build_services:
  when: manual
  image: docker:git
  services:
    - docker:dind
  stage: build
  before_script:
    - echo $GOOGLE_CLOUD_ACCOUNT | docker login -u _json_key --password-stdin https://gcr.io
  script:
    - cd src
    - docker-compose build identity-api basket-api catalog-api ordering-api payment-api webhooks-api
    - docker push gcr.io/pelagic-bastion-359618/identity.api:latest
    - docker push gcr.io/pelagic-bastion-359618/basket.api:latest
    - docker push gcr.io/pelagic-bastion-359618/catalog.api:latest
    - docker push gcr.io/pelagic-bastion-359618/ordering.api:latest
    - docker push gcr.io/pelagic-bastion-359618/payment.api:latest
    - docker push gcr.io/pelagic-bastion-359618/webhooks.api:latest
  
build_web:
  when: manual
  image: docker:git
  services:
    - docker:dind
  stage: build
  before_script:
    - echo $GOOGLE_CLOUD_ACCOUNT | docker login -u _json_key --password-stdin https://gcr.io
  script:
    - cd src
    - docker-compose build webhooks-client webmvc webspa webstatus
    - docker push gcr.io/pelagic-bastion-359618/webhooks.client:latest
    - docker push gcr.io/pelagic-bastion-359618/webmvc:latest
    - docker push gcr.io/pelagic-bastion-359618/webspa:latest
    - docker push gcr.io/pelagic-bastion-359618/webstatus:latest
  
build_dockerhub:
  image: docker:git
  services:
    - docker:dind
  when: manual
  stage: build
  before_script:
    - echo $GOOGLE_CLOUD_ACCOUNT | docker login -u _json_key --password-stdin https://gcr.io
  script:
    - cd src
    - docker-compose build seq nosqldata basketdata rabbitmq mobileshoppingapigw webshoppingapigw
    - docker push gcr.io/pelagic-bastion-359618/seq:latest
    - docker push gcr.io/pelagic-bastion-359618/mongo:latest
    - docker push gcr.io/pelagic-bastion-359618/redis:latest
    - docker push gcr.io/pelagic-bastion-359618/rabbitmq:latest
    - docker push gcr.io/pelagic-bastion-359618/mobileshoppingapigw:latest
    - docker push gcr.io/pelagic-bastion-359618/webshoppingapigw:latest

build_apigw:
  when: manual
  image: docker:git
  services:
    - docker:dind
  stage: build
  before_script:
    - echo $GOOGLE_CLOUD_ACCOUNT | docker login -u _json_key --password-stdin https://gcr.io
  script:
    - cd src
    - docker-compose build ordering-backgroundtasks mobileshoppingagg webshoppingagg ordering-signalrhub
    - docker push gcr.io/pelagic-bastion-359618/ordering.backgroundtasks:latest
    - docker push gcr.io/pelagic-bastion-359618/mobileshoppingagg:latest
    - docker push gcr.io/pelagic-bastion-359618/webshoppingagg:latest
    - docker push gcr.io/pelagic-bastion-359618/ordering.signalrhub:latest

start_instances:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: start
  script:
    - aws ec2 start-instances --instance-ids $MASTER_ID
    - aws ec2 start-instances --instance-ids $NODE1_ID
    - aws ec2 start-instances --instance-ids $NODE2_ID
    - sleep 20s

upload_files:
  image: ubuntu:18.04
  stage: upload
  script:
    - apt-get update -y
    - apt-get install openssh-client -y
    - echo "$DEPLOY_PAIR" > scpPair.pem
    - chmod 400 scpPair.pem
    - chmod -R 777 Master_Files
    - scp -v -i scpPair.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ./Master_Files/docker-compose.yml ec2-user@"$PUBLIC_IP":/home/docker_files
    - yes | scp -i scpPair.pem ./Master_Files/eShopOnContainers/mobileshopping/envoy.yaml ec2-user@"$PUBLIC_IP":/home/docker_files/mobileshopping
    - yes | scp -i scpPair.pem ./Master_Files/eShopOnContainers/webshopping/envoy.yaml ec2-user@"$PUBLIC_IP":/home/docker_files/webshopping


deploy_stack:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: deploy
  script:
    - aws ssm send-command --instance-ids $MASTER_ID --document-name "DeployDockerStack"

