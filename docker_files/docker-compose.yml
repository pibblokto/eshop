version: '3.4'

services:

  seq:
    image: gcr.io/eshop-infrastructure/seq:REPLACE
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5340:80"

  nosqldata:
    image: gcr.io/eshop-infrastructure/mongo:REPLACE
    ports:
      - "27017:27017"
    volumes:
      - eshop-nosqldata:/data/db

  basketdata:
    image: gcr.io/eshop-infrastructure/redis:REPLACE
    ports:
      - "6379:6379"
    volumes:
      - eshop-basketdata:/data

  rabbitmq:
    image: gcr.io/eshop-infrastructure/rabbitmq:REPLACE
    ports:
      - "15672:15672"
      - "5672:5672"

  identityapi:
    image: gcr.io/eshop-infrastructure/identityapi:REPLACE
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - SpaClient=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5104
      - XamarinCallback=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5105/xamarincallback
      - ConnectionString=Server=tcp:172.20.55.7,1433;Database=Microsoft.eShopOnContainers.Service.IdentityDb;User Id=sqlserver;Password=12345678
      - MvcClient=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5100
      - BasketApiClient=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5103
      - OrderingApiClient=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.comi:5102
      - MobileShoppingAggClient=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5120
      - WebShoppingAggClient=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5121
      - WebhooksApiClient=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5113
      - WebhooksWebClient=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5114
      - UseCustomizationData=True
      - ApplicationInsights__InstrumentationKey=
      - OrchestratorType=DOCKER_SWARM
    ports:
      - "5105:80"


  basketapi:
    image: gcr.io/eshop-infrastructure/basketapi:REPLACE
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionString=basketdata
      - identityUrl=http://identityapi
      - IdentityUrlExternal=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5105
      - EventBusConnection=rabbitmq
      - EventBusUserName=guest
      - EventBusPassword=guest
      - AzureServiceBusEnabled=False
      - ApplicationInsights__InstrumentationKey=
      - OrchestratorType=DOCKER_SWARM
      - UseLoadTest=False
      - PATH_BASE=/basketapi
      - GRPC_PORT=81
      - PORT=80
    ports:
      - "5103:80"
      - "9103:81"
    depends_on:
      - basketdata
      - identityapi
      - rabbitmq

  catalogapi:
    image:  gcr.io/eshop-infrastructure/catalogapi:REPLACE
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionString=Server=tcp:172.20.55.7,1433;Database=Microsoft.eShopOnContainers.Services.CatalogDb;User Id=sqlserver;Password=12345678
      - PicBaseUrl=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5101/api/v1/catalog/items/[0]/pic/
      - EventBusConnection=rabbitmq
      - EventBusUserName=guest
      - EventBusPassword=guest
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - AzureStorageEnabled=False
      - ApplicationInsights__InstrumentationKey=
      - OrchestratorType=DOCKER_SWARM
      - GRPC_PORT=81
      - PORT=80
      - PATH_BASE=/catalogapi
    ports:
      - "5101:80"
      - "9101:81"
    depends_on:
      - rabbitmq

  orderingapi:
    image: gcr.io/eshop-infrastructure/orderingapi:REPLACE
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionString=Server=tcp:172.20.55.7,1433;Database=Microsoft.eShopOnContainers.Services.OrderingDb;User Id=sqlserver;Password=12345678
      - identityUrl=http://identityapi
      - IdentityUrlExternal=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5105
      - EventBusConnection=rabbitmq
      - EventBusUserName=guest
      - EventBusPassword=guest
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - CheckUpdateTime=30000
      - ApplicationInsights__InstrumentationKey=
      - OrchestratorType=DOCKER_SWARM
      - UseLoadTest=False
      - Serilog__MinimumLevel__Override__Microsoft.eShopOnContainers.BuildingBlocks.EventBusRabbitMQ=Verbose
      - Serilog__MinimumLevel__Override__orderingapi=Verbose
      - PATH_BASE=/orderingapi
      - GRPC_PORT=81
      - PORT=80
    ports:
      - "5102:80"
      - "9102:81"
    depends_on:
      - rabbitmq

  orderingbackgroundtasks:
    image: gcr.io/eshop-infrastructure/orderingbackgroundtasks:REPLACE
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionString=Server=tcp:172.20.55.7,1433;Database=Microsoft.eShopOnContainers.Services.OrderingDb;User Id=sqlserver;Password=12345678
      - EventBusConnection=rabbitmq
      - EventBusUserName=guest
      - EventBusPassword=guest
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - CheckUpdateTime=30000
      - GracePeriodTime=1
      - ApplicationInsights__InstrumentationKey=
      - OrchestratorType=DOCKER_SWARM
      - UseLoadTest=False
      - Serilog__MinimumLevel__Override__Microsoft.eShopOnContainers.BuildingBlocks.EventBusRabbitMQ=Verbose
    ports:
      - "5111:80"
    depends_on:
      - rabbitmq

  paymentapi:
    image: gcr.io/eshop-infrastructure/paymentapi:REPLACE
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - EventBusConnection=rabbitmq
      - EventBusUserName=guest
      - EventBusPassword=guest
      - AzureServiceBusEnabled=False
      - ApplicationInsights__InstrumentationKey=
      - OrchestratorType=DOCKER_SWARM
      - Serilog__MinimumLevel__Override__paymentapi.IntegrationEvents.EventHandling=Verbose
      - Serilog__MinimumLevel__Override__Microsoft.eShopOnContainers.BuildingBlocks.EventBusRabbitMQ=Verbose
    ports:
      - "5108:80"
    depends_on:
      - rabbitmq

  webhooksapi:
    image: gcr.io/eshop-infrastructure/webhooksapi:REPLACE
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionString=Server=tcp:172.20.55.7,1433;Database=Microsoft.eShopOnContainers.Services.WebhooksDb;User Id=sqlserver;Password=12345678
      - EventBusConnection=rabbitmq
      - EventBusUserName=guest
      - EventBusPassword=guest
      - IdentityUrl=http://identityapi
      - IdentityUrlExternal=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5105
    ports:
      - "5113:80"

  mobileshoppingapigw:
    image: gcr.io/eshop-infrastructure/mobileshoppingapigw:REPLACE
    volumes:
      - ./eShopOnContainers/mobileshopping:/etc/envoy
    ports:
    - "5200:80"
    - "15200:8001"

  mobileshoppingagg:
    image: gcr.io/eshop-infrastructure/mobileshoppingagg:REPLACE
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - urls__basket=http://basketapi
      - urls__catalog=http://catalogapi
      - urls__orders=http://orderingapi
      - urls__identity=http://identityapi
      - urls__grpcBasket=http://basketapi:81
      - urls__grpcCatalog=http://catalogapi:81
      - urls__grpcOrdering=http://orderingapi:81
      - CatalogUrlHC=http://catalogapi/hc
      - OrderingUrlHC=http://orderingapi/hc
      - IdentityUrlHC=http://identityapi/hc
      - BasketUrlHC=http://basketapi/hc
      - PaymentUrlHC=http://paymentapi/hc
      - IdentityUrlExternal=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5105
    ports:
      - "5120:80"
    depends_on:
      - nosqldata
      - identityapi
      - rabbitmq
      - orderingapi
      - catalogapi
      - basketapi

  webshoppingagg:
    image: gcr.io/eshop-infrastructure/webshoppingagg:REPLACE
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - urls__basket=http://basketapi
      - urls__catalog=http://catalogapi
      - urls__orders=http://orderingapi
      - urls__identity=http://identityapi
      - urls__grpcBasket=http://basketapi:81
      - urls__grpcCatalog=http://catalogapi:81
      - urls__grpcOrdering=http://orderingapi:81
      - CatalogUrlHC=http://catalogapi/hc
      - OrderingUrlHC=http://orderingapi/hc
      - IdentityUrlHC=http://identityapi/hc
      - BasketUrlHC=http://basketapi/hc
      - PaymentUrlHC=http://paymentapi/hc
      - IdentityUrlExternal=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5105
    ports:
      - "5121:80"
    depends_on:
      - nosqldata
      - identityapi
      - rabbitmq
      - orderingapi
      - catalogapi
      - basketapi

  orderingsignalrhub:
    image: gcr.io/eshop-infrastructure/orderingsignalrhub:REPLACE
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - EventBusConnection=rabbitmq
      - EventBusUserName=guest
      - EventBusPassword=guest
      - AzureServiceBusEnabled=False
      - ApplicationInsights__InstrumentationKey=
      - OrchestratorType=DOCKER_SWARM
      - identityUrl=http://identityapi
    ports:
      - "5112:80"
    depends_on:
      - nosqldata
      - identityapi
      - rabbitmq
      - orderingapi
      - catalogapi
      - basketapi

  webstatus:
    image: gcr.io/eshop-infrastructure/webstatus:REPLACE
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - HealthChecksUI__HealthChecks__0__Name=WebMVC HTTP Check
      - HealthChecksUI__HealthChecks__0__Uri=http://webmvc/hc
      - HealthChecksUI__HealthChecks__1__Name=WebSPA HTTP Check
      - HealthChecksUI__HealthChecks__1__Uri=http://webspa/hc
      - HealthChecksUI__HealthChecks__2__Name=Web Shopping Aggregator GW HTTP Check
      - HealthChecksUI__HealthChecks__2__Uri=http://webshoppingagg/hc
      - HealthChecksUI__HealthChecks__3__Name=Mobile Shopping Aggregator HTTP Check
      - HealthChecksUI__HealthChecks__3__Uri=http://mobileshoppingagg/hc
      - HealthChecksUI__HealthChecks__4__Name=Ordering HTTP Check
      - HealthChecksUI__HealthChecks__4__Uri=http://orderingapi/hc
      - HealthChecksUI__HealthChecks__5__Name=Basket HTTP Check
      - HealthChecksUI__HealthChecks__5__Uri=http://basketapi/hc
      - HealthChecksUI__HealthChecks__6__Name=Catalog HTTP Check
      - HealthChecksUI__HealthChecks__6__Uri=http://catalogapi/hc
      - HealthChecksUI__HealthChecks__7__Name=Identity HTTP Check
      - HealthChecksUI__HealthChecks__7__Uri=http://identityapi/hc
      - HealthChecksUI__HealthChecks__8__Name=Payments HTTP Check
      - HealthChecksUI__HealthChecks__8__Uri=http://paymentapi/hc
      - HealthChecksUI__HealthChecks__9__Name=Ordering SignalRHub HTTP Check
      - HealthChecksUI__HealthChecks__9__Uri=http://orderingsignalrhub/hc
      - HealthChecksUI__HealthChecks__10__Name=Ordering HTTP Background Check
      - HealthChecksUI__HealthChecks__10__Uri=http://orderingbackgroundtasks/hc
      - ApplicationInsights__InstrumentationKey=
      - OrchestratorType=DOCKER_SWARM
    ports:
      - "5107:80"

  webspa:
    image: gcr.io/eshop-infrastructure/webspa:REPLACE
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - IdentityUrl=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5105
      - PurchaseUrl=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5202
      - IdentityUrlHC=http://identityapi/hc
      - UseCustomizationData=True
      - ApplicationInsights__InstrumentationKey=
      - OrchestratorType=DOCKER_SWARM
      - SignalrHubUrl=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5202
    ports:
      - "5104:80"
    depends_on:
      - webshoppingagg
      - webshoppingapigw

  webmvc:
    image: gcr.io/eshop-infrastructure/webmvc:REPLACE
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - PurchaseUrl=http://webshoppingapigw
      - IdentityUrl=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5105
      - SignalrHubUrl=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5202
      - IdentityUrlHC=http://identityapi/hc
      - UseCustomizationData=True
      - ApplicationInsights__InstrumentationKey=
      - OrchestratorType=DOCKER_SWARM
      - UseLoadTest=False
    ports:
      - "5100:80"
    depends_on:
      - webshoppingagg
      - webshoppingapigw

  webhooksclient:
    image: gcr.io/eshop-infrastructure/webhooksclient:REPLACE
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - Token=6168DB8D-DC58-4094-AF24-483278923590      # Webhooks are registered with this token (any value is valid) but the client won't check it
      - IdentityUrl=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5105
      - CallBackUrl=http://ElasticLoadBalancer-f4647f6a3c52a623.elb.us-east-1.amazonaws.com:5114
      - WebhooksUrl=http://webhooksapi
      - SelfUrl=http://webhooksclient/
    ports:
      - "5114:80"
    depends_on:
      - webhooksapi

  webshoppingapigw:
    image: gcr.io/eshop-infrastructure/webshoppingapigw:REPLACE
    volumes:
      - ./eShopOnContainers/webshopping:/etc/envoy
    ports:
    - "5202:80"
    - "15202:8001"
volumes:
  eshop-nosqldata:
    external: false
  eshop-basketdata:
    external: false

